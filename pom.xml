<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.ecclesiaflow</groupId>
	<artifactId>ecclesiaflow-auth-module</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<name>EcclesiaFlow Authentication Module</name>
	<description>Module d'authentification centralisée pour la plateforme de gestion d'église EcclesiaFlow. Fournit des services JWT sécurisés pour l'authentification multi-tenant.</description>
	<url>https://github.com/ecclesiaflow/ecclesiaflow-auth-module</url>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>https://opensource.org/licenses/MIT</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>ecclesiaflow-team</id>
			<name>EcclesiaFlow Development Team</name>
			<email>dev@ecclesiaflow.com</email>
			<organization>EcclesiaFlow</organization>
			<organizationUrl>https://ecclesiaflow.com</organizationUrl>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
			<timezone>America/Montreal</timezone>
		</developer>
	</developers>
	<scm>
		<connection>scm:git:git://github.com/ecclesiaflow/ecclesiaflow-auth-module.git</connection>
		<developerConnection>scm:git:ssh://github.com:ecclesiaflow/ecclesiaflow-auth-module.git</developerConnection>
		<url>https://github.com/ecclesiaflow/ecclesiaflow-auth-module/tree/main</url>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/ecclesiaflow/ecclesiaflow-auth-module/issues</url>
	</issueManagement>

	<properties>
		<java.version>21</java.version>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Versions des dépendances -->
		<jwt.version>0.11.5</jwt.version>
		<springdoc.version>2.2.0</springdoc.version>
		<commons-lang3.version>3.12.0</commons-lang3.version>
		<testcontainers.version>1.19.3</testcontainers.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>io.github.hakky54</groupId>
			<artifactId>logcaptor</artifactId>
			<version>2.12.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-resolver-dns-native-macos</artifactId>
			<version>4.1.107.Final</version> <!-- ou la version de Netty que tu utilises -->
			<classifier>osx-aarch_64</classifier> <!-- ou osx-x86_64 selon ton Mac -->
			<scope>runtime</scope>
		</dependency>

		<!--MySQL dependency-->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>8.2.0</version>
			<scope>runtime</scope>
		</dependency>
		<!--Lombok dependency-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.30</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>0.11.5</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>0.11.5</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>0.11.5</version>
		</dependency>
		<dependency>
			<groupId>com.github.vladimir-bukhtoyarov</groupId>
			<artifactId>bucket4j-core</artifactId>
			<version>7.6.0</version>
		</dependency>
		<!-- Test dependencies -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<version>5.2.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Spring Boot Starter Webflux -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<!-- Netty HTTP/2 Codec - Updated version -->
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-codec-http2</artifactId>
			<version>4.2.4.Final</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.11.0</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>1.18.30</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- Surefire Plugin pour les tests avec configuration Mockito -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.1.2</version>
				<configuration>
					<argLine>
						@{argLine}
						-Xshare:off
						--add-opens java.base/java.lang=ALL-UNNAMED
						--add-opens java.base/java.util=ALL-UNNAMED
						--add-opens java.base/java.lang.reflect=ALL-UNNAMED
						-XX:+EnableDynamicAgentLoading
						-Dnet.bytebuddy.experimental=true
					</argLine>
				</configuration>
			</plugin>
			<!-- JaCoCo Plugin pour la couverture de code -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.12</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<phase>initialize</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/web/payloads/*</exclude>
								<exclude>**/web/dto/*</exclude>
								<exclude>**/exception/InvalidCredentialsException.class</exclude>
								<exclude>**/exception/InvalidRequestException.class</exclude>
								<exclude>**/exception/InvalidTokenException.class</exclude>
								<exclude>**/exception/JwtProcessingException.class</exclude>
								<exclude>**/*$Builder.*</exclude>
								<exclude>**/*$*</exclude>
							</excludes>
						</configuration>
					</execution>
					<execution>
						<id>jacoco-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/web/payloads/*</exclude>
								<exclude>**/web/dto/*</exclude>
								<exclude>**/exception/InvalidCredentialsException.class</exclude>
								<exclude>**/exception/InvalidRequestException.class</exclude>
								<exclude>**/exception/InvalidTokenException.class</exclude>
								<exclude>**/exception/JwtProcessingException.class</exclude>
								<exclude>**/*$Builder.*</exclude>
								<exclude>**/*$*</exclude>
							</excludes>
							<rules>
								<rule>
									<element>PACKAGE</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.80</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
